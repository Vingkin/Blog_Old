(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{473:function(t,e,a){"use strict";a.r(e);var r=a(2),l=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"channel-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#channel-buffer"}},[t._v("#")]),t._v(" Channel & Buffer")]),t._v(" "),a("p",[t._v("channel 有一点类似于 stream，它就是读写数据的"),a("strong",[t._v("双向通道")]),t._v("，可以从 channel 将数据读入 buffer，也可以将 buffer 的数据写入 channel，而之前的 stream 要么是输入，要么是输出，channel 比 stream 更为底层")]),t._v(" "),a("img",{attrs:{src:"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/os/20220721171100.png",title:"",alt:"","data-align":"center"}}),t._v(" "),a("p",[t._v("常见的 Channel 有")]),t._v(" "),a("ul",[a("li",[t._v("FileChannel")]),t._v(" "),a("li",[t._v("DatagramChannel")]),t._v(" "),a("li",[t._v("SocketChannel")]),t._v(" "),a("li",[t._v("ServerSocketChannel")])]),t._v(" "),a("p",[t._v("buffer 则用来缓冲读写数据，常见的 buffer 有")]),t._v(" "),a("ul",[a("li",[t._v("ByteBuffer\n"),a("ul",[a("li",[t._v("MappedByteBuffer")]),t._v(" "),a("li",[t._v("DirectByteBuffer")]),t._v(" "),a("li",[t._v("HeapByteBuffer")])])]),t._v(" "),a("li",[t._v("ShortBuffer")]),t._v(" "),a("li",[t._v("IntBuffer")]),t._v(" "),a("li",[t._v("LongBuffer")]),t._v(" "),a("li",[t._v("FloatBuffer")]),t._v(" "),a("li",[t._v("DoubleBuffer")]),t._v(" "),a("li",[t._v("CharBuffer")])]),t._v(" "),a("h2",{attrs:{id:"selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#selector"}},[t._v("#")]),t._v(" Selector")]),t._v(" "),a("p",[t._v("selector 单从字面意思不好理解，需要结合服务器的设计演化来理解它的用途")]),t._v(" "),a("h3",{attrs:{id:"多线程版设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程版设计"}},[t._v("#")]),t._v(" 多线程版设计")]),t._v(" "),a("img",{attrs:{src:"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/os/20220721171657.png",title:"",alt:"","data-align":"center"}}),t._v(" "),a("h3",{attrs:{id:"多线程版缺点⚠️"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多线程版缺点⚠️"}},[t._v("#")]),t._v(" 多线程版缺点⚠️")]),t._v(" "),a("ul",[a("li",[t._v("内存占用高")]),t._v(" "),a("li",[t._v("线程上下文切换成本高")]),t._v(" "),a("li",[t._v("只适合连接数少的场景")])]),t._v(" "),a("h3",{attrs:{id:"线程池版设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程池版设计"}},[t._v("#")]),t._v(" 线程池版设计")]),t._v(" "),a("img",{attrs:{src:"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/os/20220721171729.png",title:"",alt:"","data-align":"left"}}),t._v(" "),a("h4",{attrs:{id:"线程池版缺点⚠️"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程池版缺点⚠️"}},[t._v("#")]),t._v(" 线程池版缺点⚠️")]),t._v(" "),a("ul",[a("li",[t._v("阻塞模式下，线程仅能处理一个 socket 连接")]),t._v(" "),a("li",[t._v("仅适合短连接场景")])]),t._v(" "),a("h3",{attrs:{id:"selector-版设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#selector-版设计"}},[t._v("#")]),t._v(" selector 版设计")]),t._v(" "),a("p",[t._v("selector 的作用就是配合一个线程来管理多个 channel，获取这些 channel 上发生的事件，这些 channel 工作在非阻塞模式下，不会让线程吊死在一个 channel 上。适合连接数特别多，但流量低的场景（low traffic）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/os/20220721171753.png",alt:""}})]),t._v(" "),a("p",[t._v("调用 selector 的 select() 会阻塞直到 channel 发生了读写就绪事件，这些事件发生，select 方法就会返回这些事件交给 thread 来处理")])])}),[],!1,null,null,null);e.default=l.exports}}]);